{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Document classification","version":"0.3.2","provenance":[{"file_id":"1JW2I6cU_ypfRXfIfqMPQwMEA6LzGav-Y","timestamp":1539529768350},{"file_id":"1MWGhLyhIGtQyApqDs34ys7tT5ZdjlUaT","timestamp":1515605944693}],"collapsed_sections":[]}},"cells":[{"metadata":{"id":"-h4oIrgOKMk0","colab_type":"text"},"cell_type":"markdown","source":["# Problem-solving with ML: automatic document classification"]},{"metadata":{"id":"uC-HA3VhKf3_","colab_type":"text"},"cell_type":"markdown","source":["This notebook is largely based on [\"Problem-solving with ML: automatic document classification\"](https://cloud.google.com/blog/big-data/2018/01/problem-solving-with-ml-automatic-document-classification) blog post and the code that they provide"]},{"metadata":{"id":"JFMm799HKMlu","colab_type":"code","colab":{}},"cell_type":"code","source":["import json\n","import pandas as pd"],"execution_count":0,"outputs":[]},{"metadata":{"id":"pLDKrqMMzmxq","colab_type":"code","outputId":"70706447-cd59-42e6-8b84-bec837a42584","executionInfo":{"status":"ok","timestamp":1542646459006,"user_tz":-360,"elapsed":67999,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":75}},"cell_type":"code","source":["from google.colab import files\n","uploaded = files.upload()\n"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-16500611-5f47-41fb-8ec0-a4373b2ed49e\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-16500611-5f47-41fb-8ec0-a4373b2ed49e\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving bbc-text.csv to bbc-text.csv\n"],"name":"stdout"}]},{"metadata":{"id":"45vv7UAMKMlx","colab_type":"code","colab":{}},"cell_type":"code","source":["from StringIO import StringIO\n","df = pd.read_csv(StringIO(uploaded['bbc-text.csv']))\n","df['category_id'] = df['category'].factorize()[0]"],"execution_count":0,"outputs":[]},{"metadata":{"id":"2wDV-e9TdRoU","colab_type":"code","colab":{}},"cell_type":"code","source":["category_id_df = df[['category', 'category_id']].drop_duplicates().sort_values('category_id')\n","category_to_id = dict(category_id_df.values)\n","id_to_category = dict(category_id_df[['category_id', 'category']].values)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"o-p4-4sSVRyo","colab_type":"text"},"cell_type":"markdown","source":["Convert data into vectors"]},{"metadata":{"id":"mtmh4uCMKMl5","colab_type":"code","outputId":"570be7cf-0b77-42c9-bef9-87c79561c4ad","executionInfo":{"status":"ok","timestamp":1542646481621,"user_tz":-360,"elapsed":6000,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","\n","tfidf = TfidfVectorizer(sublinear_tf=True, min_df=5, norm='l2', encoding='latin-1', ngram_range=(1, 2), stop_words='english')\n","\n","features = tfidf.fit_transform(df.text).toarray()\n","labels = df.category_id\n","features.shape"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2225, 14415)"]},"metadata":{"tags":[]},"execution_count":6}]},{"metadata":{"id":"1XwFNO4re_Fz","colab_type":"text"},"cell_type":"markdown","source":["### Evaluation of different models\n"]},{"metadata":{"id":"MPI84Fkoel-a","colab_type":"code","colab":{}},"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.naive_bayes import MultinomialNB\n","\n","from sklearn.decomposition import TruncatedSVD\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import Normalizer\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","from sklearn.model_selection import cross_val_score\n","\n","\n","\n","\n","models = [\n","    RandomForestClassifier(n_estimators=200, max_depth=3, random_state=0),\n","    MultinomialNB(),\n","    LogisticRegression(random_state=0),\n","    KNeighborsClassifier(n_neighbors=5, algorithm='brute', metric='cosine')\n","]\n","CV = 5\n","cv_df = pd.DataFrame(index=range(CV * len(models)))\n","entries = []\n","for model in models:\n","  model_name = model.__class__.__name__\n","  accuracies = cross_val_score(model, features, labels, scoring='accuracy', cv=CV)\n","  for fold_idx, accuracy in enumerate(accuracies):\n","    entries.append((model_name, fold_idx, accuracy))\n","cv_df = pd.DataFrame(entries, columns=['model_name', 'fold_idx', 'accuracy'])"],"execution_count":0,"outputs":[]},{"metadata":{"id":"njwq4ZqntBXn","colab_type":"code","outputId":"e36ca5d0-76d5-46c5-9835-ea25bc11b2b3","executionInfo":{"status":"ok","timestamp":1539697501116,"user_tz":-360,"elapsed":863,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":416}},"cell_type":"code","source":["# import seaborn as sns\n","# sns.boxplot(x='model_name', y='accuracy', data=cv_df)\n","# sns.stripplot(x='model_name', y='accuracy', data=cv_df, \n","#               size=8, jitter=True, edgecolor=\"gray\", linewidth=2) "],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python2.7/dist-packages/seaborn/categorical.py:454: FutureWarning: remove_na is deprecated and is a private function. Do not use.\n","  box_data = remove_na(group_data)\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f86b6eb5e90>"]},"metadata":{"tags":[]},"execution_count":12},{"output_type":"display_data","data":{"image/png":"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\nWbNmvn3MmDGDJUuW8M477xAWFkbjxo159tlnCQs7/VXqgrkbOi8vj2effYKsrMyKU/LCmlRcJKc0\nA4CEhIsZO/ZRrNaqjVkQEZHgcKZu/Dp/PfvaKDc3h/ff/yfr1q32jYUICQmlT5+rGDr0Nuz2kABX\nKCIi55vCPkjl5GSzd+9urFYb8fFta9zpdiIicv4EZICe+J/T2RCns+HPrygiInVazZpXVURERKqd\nwl5ERCTIKexFRESCnMJeREQkyCnsRUREgpzCXkREJMgp7EVERIKcwl5ERCTIKexFRESCnMJeREQk\nyCnsRUREglxQXghHREREjlPLXkREJMgp7EVERIKcwl5ERCTIKexFRESCnMJeREQkyCnsRUREglyd\nCPt9+/bRtWtXRo4cyciRI7n11luZOHEiHo/nF+/zpptuYt++fb94+wkTJnD99df7aho5ciRbtmz5\nxfs7nUWLFvn+3rBhg+/533TTTbz66quYpklKSgoPPPDAOT/WvHnz+M9//gPAH//4R+644w6+//57\n5syZc877rk779u2jffv2rFu3rtLtN998MxMmTDjlNvPmzeP5558HYOHChQBs2bKFadOmVXt9zz77\nLOnp6ae9/7LLLgPglVde4eabb+bEs2dHjhwJQEpKCj179vR9tm6//XbS0tKqvdbqtG/fPm666aZf\nvP2ZXrfCwkKWLl0KwFtvvcXatWtPW0N1f1ecq8zMTJ544omAPf6p/PS9WrJkCcOHD+fDDz+kb9++\nlJWV+e6bMGHCGb8rf+7z3r9/f4qKiirdduL/x+pQXFzMxIkTufHGGxk2bBh/+MMfOHjw4Gkf/2yd\n+B7Onz+fa665hlWrVnHPPfecc+1VZTtvjxRgrVu3ZtasWb7lCRMmMH/+fH7zm98ErKaHHnqIfv36\n+W3/+/bt46uvvuKaa66hsLCQcePG8corr9CuXTtcLhdjx47l448/5oILLqiWxzvxP//q1atZuXJl\ntezXH1q0aMGXX37JJZdcAsCePXvIz8+v0rZvvfUWgwYN4qKLLuKiiy6q9toef/zxKq9bXl7OggUL\nGDx48En39ejRw/dj5PPPP+fdd9/lqaeeqrY6a5ozvW6pqaksW7aMK664gt///vdn3E9N+66IiYmp\n0e/btm3bmDZtGv/85z/573//S1RUFO++++7Pvs7HnM3n3V+mTJlCXFwcTz/9NAALFizg//7v//jw\nww+rZf8nvofLly9n3LhxdO/ene7du1fL/quizoT9T3Xu3Jk9e/YwZcoUNmzYQFlZGbfddhu33HIL\nEyZMIDY2ltTUVA4cOMDUqVNJSEjgmWeeYe3atbRu3RqXywXAoUOHSEpKwuVyYRgGzz77LIZh8Oij\nj9KyZUvWrl3LbbfdxrZt21i/fj3Dhw9n+PDhp61r27ZtPPXUU1gsFiIiInjuuefYtm0bM2fOpLi4\nmPHjx3PgwAFmzpyJzWajU6dOTJgwgQMHDjBu3DgsFgsej4cXXniBp556ig0bNvDqq6/SsGFDrr76\natq1aweA3W7n+eefJywsjFWrVvkef+bMmSxatAiv10vfvn2577772Lx5M08++SQhISGEhITw0ksv\nsW/fvpNue/fdd4mOjmbfvn0UFxczZswYBg8ezI4dOxg/fjyzZ89m/vz5WCwWEhMTGTVqFK+88grp\n6ens27ePWbNmYbVa/fvGH9WlSxeWL1+Ox+PBarXy1Vdf0bt3b0pLS+nfvz/z588nIiKC559/nrZt\n2/q2e+edd9i2bRv33XcfI0eOZPbs2UybNo0BAwaQmJjImjVriIyM5K233qKoqIgJEyaQn5+P2+3m\nz3/+MwkJCSQmJtK/f3+Sk5Pp06cPpmmybNkyrrzySh555BFGjhzJxIkTiYqKYty4cQC43W6ef/55\nWrZsWel53HPPPUyfPp0BAwZgt9tP+3yzsrKIjY31z4vpR6f6/xAREcG4ceM4cOAAXbt2ZcGCBXz/\n/fe+183tdp/02XzqqacoLCykVatWrF27lmuuuYYrrriCCRMmsH//fkJDQ/nrX/96yhqOfVcAp/wM\nHzp0iAcffBC73U737t1ZvXo1s2bNYuDAgXTs2JHevXvTtWtXnnrqKQzD8D2PsLAwxo0bR2ZmJuXl\n5dx///306tXrpNvatGnDAw88wLx580hJSeGll17CZrPRuHFjpkyZwpdffsnq1avJyclh165djB49\nmltuueW8vD85OTmMHz+el156CafTCcDtt9/OnDlzGDp0KA0aNPCt6/F4mDhxIunp6bjdbh544AF6\n9epV6fN+qtfx2Ov+3Xff4fF4eOedd4CKxszdd9/NoUOHuPPOO/ntb3972tfn+++/JyMjgxdeeIEX\nXnih0uvbrVs3li5dypIlS3y1XnvttfTu3bvSc926dStPPvkkNpsNi8XCyy+/7PssVvU9fPjhh/n+\n++/ZtGkTUVFR3H///aSkpLBz586TPh/5+fmMGzeO8PBwRowYcc4NwzrRjf9TLpeLr7/+mgsvvJC4\nuDg++OAD5syZw8svv+xbp7y8nBkzZnDHHXfw+eefs3PnTtasWcPHH3/Mww8/zK5duwB4+eWX+e1v\nf8usWbO4/fbbefXVV4GKLt7x48czffp0pk6dytixY3nzzTf56KOPzljbs88+y6OPPsqsWbP41a9+\nxXvvvQfA9u3bmTFjBq1bt+aNN97gvffe4/333+fgwYOsXr2aRYsWcfnllzNr1iwef/xxMjMzGT16\nND169OC+++7jxx9/PKkV6nA4Thmuc+bM4aOPPmLevHkUFhYyb948brvtNmbNmsWYMWPIzMw85W3H\nTJgwAYfD4ftPCZCens7ChQv54IMPmD17NosXL+bAgQO+92POnDnnLeih4sdOly5dSElJAeDrr7+m\nb9++P7vdmDFjcDgcvvf5mPT0dG644Qbmzp1Lfn4+27Zt491336VLly7MmjWLpKQkpkyZAlR8Sd16\n66189NFHzJo1i0GDBvHRRx/x6aefVtpnRkYG9957L7NmzeLmm28+5eGQhg0bkpiYeMoWyIoVKxg5\nciQ33XQTn3zyCbfeemuVX5+a4lT/H/73v/9RVlbGRx99RM+ePcnIyKi0zak+m6NHj2bw4MGVXoPP\nP/+cRo0a8eGHHzJ06FC+/vrrkx7/2HdFQkLCaT/D//znP7n22mt5//33KS8v922bnp7Ovffeyy23\n3MLTTz/NU089xbvvvkvv3r2ZPXs227dvJzc3l9mzZzNjxgzy8vJOeduJJk2axEsvvcT7779P/fr1\nmT9/PlDx/fDqq6/y2muv8f7771fnW3BaxwL72muvJT4+3nd7aGgod911F2+++Wal9efPn09MTAyz\nZs3itddeY/LkyZXuP93rCNC2bVtmz55Ns2bN+OGHHwDYvXs3r7/+Ou+99x7Tpk3DNM3Tvj4HDx5k\n9uzZHDly5KTXNz09ndatW5/0/RMVFVVpOTs7m4kTJzJr1iy6devG/Pnzz/o97N27N3369OGhhx6i\nR48evttP9fmAihyZOnVqtfQA15mW/a5du3zHM7dt28aYMWMYMmQIr7zyCsOGDcNut5Obm+tb/1j3\nSpMmTdiwYQM7d+6kS5cuWCwWmjZtSosWLQDYtGkTDz/8MFBxLPW1114DoGXLlkRHRxMSEoLT6aRx\n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\nG9Yclqsdl6BkAAAAAElFTkSuQmCC\n","text/plain":["<matplotlib.figure.Figure at 0x7f86b824d910>"]},"metadata":{"tags":[]}}]},{"metadata":{"id":"-DX1gVduotvA","colab_type":"code","outputId":"b9626413-f5f2-41ba-9269-edd41d499bbd","executionInfo":{"status":"ok","timestamp":1541519811242,"user_tz":-360,"elapsed":791,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":127}},"cell_type":"code","source":["cv_df.groupby('model_name').accuracy.mean()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["model_name\n","KNeighborsClassifier      0.964032\n","LogisticRegression        0.979782\n","MultinomialNB             0.970783\n","RandomForestClassifier    0.830570\n","Name: accuracy, dtype: float64"]},"metadata":{"tags":[]},"execution_count":21}]},{"metadata":{"id":"xek_aacPVsfZ","colab_type":"text"},"cell_type":"markdown","source":["Model training"]},{"metadata":{"id":"kzO82ptUKMmA","colab_type":"code","outputId":"4b802933-c3f5-4870-9ff5-79485cdc0989","executionInfo":{"status":"ok","timestamp":1542646522966,"user_tz":-360,"elapsed":868,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":90}},"cell_type":"code","source":["model.fit(features, labels)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n","          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n","          penalty='l2', random_state=0, solver='liblinear', tol=0.0001,\n","          verbose=0, warm_start=False)"]},"metadata":{"tags":[]},"execution_count":9}]},{"metadata":{"id":"AV4_MbWoKvY6","colab_type":"code","colab":{}},"cell_type":"code","source":["INPUT = \"articles1110-2.json\"\n","OUTPUT = \"clfArticleCategories.json\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"7j4mJHAcGnK8","colab_type":"code","colab":{}},"cell_type":"code","source":["def loadArticles(input_filename):\n","  with open(input_filename, \"r\") as file:\n","    articles = json.load(file)\n","  return articles"],"execution_count":0,"outputs":[]},{"metadata":{"id":"SnlIlmuCG7Cw","colab_type":"code","outputId":"301e424b-0364-4287-be0e-129a2f859b06","executionInfo":{"status":"ok","timestamp":1541520198197,"user_tz":-360,"elapsed":6158,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":55}},"cell_type":"code","source":["articles = loadArticles(path + INPUT)\n","print(articles)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"ReQCegHIItxc","colab_type":"code","colab":{}},"cell_type":"code","source":["texts = []\n","text_ids = []\n","for article in articles:\n","  text = article['text']\n","  text = text.encode('ascii', 'ignore').decode('ascii')   \n","  id = article['id']\n","  texts.append(text)\n","  text_ids.append(id)\n","  \n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"DvmxlZdJGITR","colab_type":"code","colab":{}},"cell_type":"code","source":["# texts = [\"Hooli stock price soared after a dip in PiedPiper revenue growth.\",\n","#          \"Captain Tsubasa scores a magnificent goal for the Japanese team.\",\n","#          \"Merryweather mercenaries are sent on another mission, as government oversight groups call for new sanctions.\",\n","#          \"Beyoncé releases a new album, tops the charts in all of south-east Asia!\",\n","#          \"You won't guess what the latest trend in data analysis is!\"]\n","text_features = tfidf.transform(texts)\n","predictions = model.predict(text_features)\n","i=0\n","final_cats = []\n","for text_id, text, predicted in zip(text_ids, texts, predictions):\n","    final_cats.append({'id': text_id,'text':text, 'bestCat':id_to_category[predicted]})\n","#   print('\"{}\"'.format(i))\n","#   print(\"  - Predicted as: '{}'\".format(id_to_category[predicted]))\n","#   print(\"\")\n","\n","with open(path+OUTPUT, 'w') as file:\n","  file.write(json.dumps(final_cats))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Px9jHu8npxlh","colab_type":"code","outputId":"33dec4d4-ec6d-4704-96b8-5f61310cb8e4","executionInfo":{"status":"ok","timestamp":1541520281488,"user_tz":-360,"elapsed":1090,"user":{"displayName":"Gaukhar Dauzhan","photoUrl":"","userId":"01799493951419244866"}},"colab":{"base_uri":"https://localhost:8080/","height":55}},"cell_type":"code","source":["print(final_cats[53])"],"execution_count":0,"outputs":[{"output_type":"stream","text":["{'text': u'The year was fading. It was the morning of Christmas Eve, 1968, and the three-member crew of Apollo 8 was on its fourth orbit of the moon  the fourth such orbit in human history. Following their flight plan, the astronauts were executing a 180-degree roll, slowly turning the capsule as it shot through space.\\n\\nOh my God!\\n\\nAstronaut Bill Anders had been peering out a side window, holding up a bulky Hasselblad camera to take photographs of the moons cratered surface. Looking up at the lunar horizon, he glimpsed something that no one had seen before: an Earthrise.\\n\\nHeres the Earth comin up, he said, a trace of wonder in his voice. Wow, is it pretty!\\n\\nDown there, on that gorgeous blue orb, it had been a hell of a year. The Vietnam War was raging, and Americans were fighting one another in the streets of their own cities. Half the world was engulfed in protest; angry students nearly shut down France and were slaughtered in Mexico. The Cultural Revolution swept like a fury across China; the Soviet Union crushed the Prague Spring. Assassins claimed the lives of Martin Luther King Jr. and Robert F. Kennedy; a beleaguered President Lyndon Johnson declined to run for reelection. Now Richard Nixon was weeks away from inauguration.\\n\\nIt all looked so peaceful, from the moon.\\n\\nAnders snapped a black and white photo, then hollered to Jim Lovell. You got a color film, Jim? Hand me a roll of color, quick, would you? Hurry!\\n\\nHeres the Earth comin up. Wow, is it pretty! Astronaut Bill Anders\\n\\nThe photograph that Anders took became one of the most celebrated ever. It showed the Earth in all its living glory. It invited people to step away from one of the most contentious years anyone could remember and gain some perspective. Many talked about how it seemed to show the beauty and fragility of their one and only world, spinning through a dark and indifferent universe. The picture was credited with helping to launch the environmental movement.\\n\\nBut maybe it was Anders next words that said the most  about hoping to capture a perfect image for his camera on the next orbit. Itll come up again  I think, he told Lovell. He thought.\\n\\nBecause in 1968, who knew?\\n\\nA lot has changed in 50 years. The internet and cellphones have transformed the way we communicate. Our politics have become coarser and more polarized. Progress, however halting, has been made in race relations, in upholding the rights of women and people of different gender identities. Climate change has fundamentally altered the planet.\\n\\nRELATED | 1968: A timeline of anger, grief and change \\n\\nYet the parallels between now and then are hard to ignore. In 1968, the United States was a deeply divided nation, whose president was viewed by many as crass and unbefitting his office. The United States was mired in a long war that many saw as pointless. White supremacists, rallying behind the presidential campaign of former Alabama Gov. George Wallace, appeared newly emboldened. Gun violence and rampant drug abuse had given rise to worries about the fundamental health of American society. Women, people of color and gays and lesbians were demanding equality and respect.\\n\\nAnd each day seemed to bring a new shock.\\n\\nA soldier is wounded during the Tet Offensive in January 1968. Demonstrators clash with police in Paris in May 1968.\\n\\nRussian tanks roll through downtown Prague in August 1968. Guards man a student protest in Mexico City in October 1968.\\n\\nThe news cycle may have been slower then, but the news was not. Here are just a few of the events of that tumultuous year:\\n\\nIn January, North Korean patrol boats seized a U.S. Navy spy ship, the Pueblo, and its crew of 83, raising the prospect of war with the reclusive Communist state. Later that month, North Vietnam launched the Tet Offensive, a massive assault on U.S.-held bases and cities throughout South Vietnam that deeply shook the confidence of the American public over a war their leaders had told them they were winning.\\n\\nIn February, Associated Press photographer Eddie Adams took a picture of South Vietnamese Gen. Nguyen Ngoc Loan executing a Viet Cong prisoner on a Saigon street  a horrifying image that fed concerns that the United States was propping up a corrupt regime.\\n\\nSouth Vietnamese Gen. Nguyen Ngoc Loan fires his pistol into the head of suspected Viet Cong officer Nguyen Van Lem on a Saigon street, early in the Tet Offensive. Eddie Adams / Associated Press\\n\\nIn March, Sen. Eugene McCarthy came within 230 votes of defeating Johnson in the New Hampshire Democratic primary. Four days later, Sen. Robert Kennedy, younger brother of the slain president, announced that he too would challenge the incumbent. At the end of the month, a weary Johnson delivered a long, nationally televised address, ostensibly about the Vietnam War.\\n\\nRELATED | East L.A., 1968: The day a school walkout helped ignite the Chicano power movement \\n\\nJournalists talk about burying the lead  placing the most important news far down in an article. No one has ever buried the lead like Johnson, who concluded his speech with words that millions of Americans can recite to this day: Accordingly, I shall not seek, and I will not accept, the nomination of my party for another term as your president.\\n\\nPresident Lyndon Johnson declined to run for reelection. Associated Press\\n\\nIt was just four days later, on April 4, that King was assassinated at the Lorraine Motel in Memphis, Tenn. He was 39 years old. Kennedy got the word while campaigning in Indianapolis, and delivered the news to a shocked crowd  five decades later, it is still horrifying to hear their screams. His short, spontaneous speech would go down as one of the most eloquent in American politics.\\n\\nIt concluded: Let us dedicate ourselves to what the Greeks wrote so many years ago: to tame the savageness of man and make gentle the life of this world.\\n\\nLet us dedicate ourselves to what the Greeks wrote so many years ago: to tame the savageness of man and make gentle the life of this world. Robert F. Kennedy\\n\\nSanitation workers continue their strike in Memphis, Tenn., a day after a march led by the Rev. Martin Luther King Jr. in March 1968. (Associated Press) King, second from right, stands on the balcony of the Lorraine Motel in Memphis on April 3, 1968, the day before his assassination. (Associated Press)\\n\\nThose words went unheeded. Within hours, riots erupted in 110 American cities, entire swaths of which were burned to the ground. The whole country seemed to be on fire. Had the American experiment failed?\\n\\nOn June 4, Kennedy won the California Democratic primary, making him the odds-on favorite to become his partys presidential nominee. A few minutes after midnight, he was shot to death at the Ambassador Hotel in Los Angeles.\\n\\nTo millions of Americans, the back-to-back assassinations felt like the end of hope.\\n\\nPresidential candidate Robert F. Kennedy lies on the floor at the Ambassador Hotel in Los Angeles moments after he was shot in the head. He had just finished his victory speech upon winning the California primary. Boris Yaro / Los Angeles Times\\n\\nIn August, at a heavily secured convention in Miami Beach, Republicans nominated Richard Nixon as their presidential candidate. Later that month, the Democrats convened in Chicago, where the streets quickly turned into a battle zone. The whole world is watching! antiwar demonstrators chanted as cops used their nightsticks to beat them brutally and cameras captured the mayhem for an international audience. The Democrats nominated Vice President Hubert H. Humphrey as their standard-bearer.\\n\\nIn October, the Summer Olympics were held in Mexico City, where, days earlier, police and soldiers had turned their guns on student protesters, killing or wounding hundreds. The Games would be remembered for this scene: African American athletes John Carlos and Tommie Smith raising black-gloved fists from a medal podium as the national anthem played. It was a moment of singular power, reflecting both black pride and black anger.\\n\\nExtending gloved hands skyward in racial protest, U.S. athletes Tommie Smith, center, and John Carlos stare downward during the playing of the \"Star-Spangled Banner\" during the Summer Olympics in Mexico City. Associated Press\\n\\nIn November, Nixon defeated Humphrey. In a victory speech, he pledged an open administration that would seek to bridge the generation gap [and] the gap between the races. We want to bring America together.\"\\n\\nOn Dec. 21, Apollo 8 began its journey toward the moon.\\n\\nOn Christmas Eve, hours after the Earthrise photo was snapped, the three astronauts went on live television. Broadcast internationally, their appearance had an estimated audience of 1 billion people  at that point, the largest audience for any event in history.\\n\\nAnders said the astronauts had a message for the world. He paused, and began to read from a King James Bible:\\n\\nIn the beginning, God created the Heaven and the Earth. And the Earth was without form and void, and darkness was upon the face of the deep. And the spirit of God moved upon the face of the waters, and God said, Let there be light. And there was light. And God saw the light, that it was good, and God divided the light from the darkness.\\n\\nHe handed the Bible to Lovell, who read the next section of Genesis.\\n\\nMission Cmdr. Frank Borman concluded the cosmic broadcast. And from the crew of Apollo 8, he said, we close with good night, good luck, a Merry Christmas and God bless all of you  all of you on the good Earth.', 'id': 53, 'bestCat': 'entertainment'}\n"],"name":"stdout"}]},{"metadata":{"id":"eqMwV3mnOa_f","colab_type":"code","colab":{}},"cell_type":"code","source":["# tech, business, sport, entertainment, politics"],"execution_count":0,"outputs":[]},{"metadata":{"id":"6Aq1mukfkfqI","colab_type":"text"},"cell_type":"markdown","source":["Classification  of 20 newsgroup dataset"]},{"metadata":{"id":"Pv024Da9YxrB","colab_type":"code","colab":{}},"cell_type":"code","source":["from sklearn.datasets import fetch_20newsgroups\n","OUTPUT = \"classified20NewsGroupsCategories.json\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"3kxC1pQ5YzRJ","colab_type":"code","colab":{}},"cell_type":"code","source":["categories = ['comp.graphics', 'sci.electronics', 'talk.politics.guns', 'talk.politics.misc', 'rec.sport.baseball', 'rec.sport.hockey']"],"execution_count":0,"outputs":[]},{"metadata":{"id":"-ZAQW3gTZdKZ","colab_type":"code","outputId":"79452da2-50ac-48af-f264-59f2de7c68cc","executionInfo":{"status":"ok","timestamp":1541936378488,"user_tz":-360,"elapsed":21518,"user":{"displayName":"Alisher Iskakov","photoUrl":"","userId":"12573961081415238035"}},"colab":{"base_uri":"https://localhost:8080/","height":52}},"cell_type":"code","source":["twenty_test = fetch_20newsgroups(subset='train', categories=categories, shuffle=True, random_state=42)\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Downloading 20news dataset. This may take a few minutes.\n","Downloading dataset from https://ndownloader.figshare.com/files/5975967 (14 MB)\n"],"name":"stderr"}]},{"metadata":{"id":"b5avjHkEka74","colab_type":"code","outputId":"3fed232b-b183-4fb4-92d9-a9555088b10a","executionInfo":{"status":"ok","timestamp":1541936379539,"user_tz":-360,"elapsed":1005,"user":{"displayName":"Alisher Iskakov","photoUrl":"","userId":"12573961081415238035"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"cell_type":"code","source":["len(twenty_test)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["6"]},"metadata":{"tags":[]},"execution_count":4}]},{"metadata":{"id":"Ykld_nSTZxZ1","colab_type":"code","colab":{}},"cell_type":"code","source":["text_features = tfidf.transform(twenty_test.data)\n","predictions = model.predict(text_features)\n","# twenty_train.target_names[twenty_train.target[0]]\n","# i=0\n","final_cats = []\n","for target, predicted in zip(twenty_test.target, predictions):\n","    final_cats.append({'classified':id_to_category[predicted], 'target':twenty_test.target_names[target]})\n","#   print('\"{}\"'.format(i))\n","#   print(\"  - Predicted as: '{}'\".format(id_to_category[predicted]))\n","#   print(\"\")\n","\n","with open(path+OUTPUT, 'w') as file:\n","  file.write(json.dumps(final_cats))\n"],"execution_count":0,"outputs":[]},{"metadata":{"id":"brqU_7i0xmVK","colab_type":"code","colab":{}},"cell_type":"code","source":["INPUT = \"cnn_articles_new.json\"\n","OUTPUT = \"clfCnnArticleNewCategories.json\""],"execution_count":0,"outputs":[]},{"metadata":{"id":"a-7I1gHw56Q4","colab_type":"code","colab":{}},"cell_type":"code","source":["articles = loadArticles(path + INPUT)\n","# print(articles)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Sx8eXwum58WH","colab_type":"code","colab":{}},"cell_type":"code","source":["texts = []\n","targets = []\n","for article in articles:\n","  text = article['text']\n","  target = article['category']\n","  text = text.encode('ascii', 'ignore').decode('ascii')   \n","  texts.append(text)\n","  targets.append(target)"],"execution_count":0,"outputs":[]},{"metadata":{"id":"aFRhiNTY6C2l","colab_type":"code","colab":{}},"cell_type":"code","source":["text_features = tfidf.transform(texts)\n","predictions = model.predict(text_features)\n","i=0\n","final_cats = []\n","for text, target, predicted in zip(texts, targets, predictions):\n","    final_cats.append({'text':text, 'target':target, 'classified':id_to_category[predicted]})"],"execution_count":0,"outputs":[]},{"metadata":{"id":"-nCQ7Y9I6Eej","colab_type":"code","colab":{}},"cell_type":"code","source":["with open(path+OUTPUT, 'w') as file:\n","  file.write(json.dumps(final_cats))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"eql0j6pI6GiL","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}